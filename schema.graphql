enum ZeroXOrderType {
  Filled
  Cancelled
}

type Token @entity {
  id: ID!

  """
  Token address
  """
  address: Bytes!

  """
  Token name
  """
  name: String!

  """
  Token symbol
  """
  symbol: String!

  """
  Total supply of the token
  """
  totalSupply: BigInt!

  """
  Quantity of the token that has been minted
  """
  totalMinted: BigInt!

  """
  Quantity of the token that has been burned
  """
  totalBurned: BigInt!

  assets: [Asset!] @derivedFrom(field: "token")

  accounts: [Account!] @derivedFrom(field: "token")

  createTimeStamp: BigInt!
}

type Asset @entity {
  id: ID!
  assetId: BigInt!
  assetURL: String
  currentOwner: Account!
  history: [AssetHistory!] @derivedFrom(field: "asset")
  token: Token!
  createTimeStamp: BigInt!
  updateTimeStamp: BigInt!
  orders: [ZeroXOrder!] @derivedFrom(field: "asset")
}

type AssetHistory @entity {
  id: ID!
  owner: Account!
  asset: Asset!
  timestamp: BigInt!
  txHash: Bytes!
}

type Account @entity {
  id: ID!
  address: Bytes!
  assets: [Asset!] @derivedFrom(field: "currentOwner")
  assetCount: BigInt!
  token: Token!
  createTimeStamp: BigInt!
}

type ZeroXOrder @entity {
  asset: Asset!
  id: ID! # orderHash (unqiue because of the salt)
  maker: Bytes!
  feeRecipient: Bytes!
  makerAssetData: Bytes
  takerAssetData: Bytes
  makerFeeAssetData: Bytes
  takerFeeAssetData: Bytes
  orderHash: Bytes
  taker: Bytes
  sender: Bytes
  makerAssetFilledAmount: BigInt
  takerAssetFilledAmount: BigInt
  makerFeePaid: BigInt
  takerFeePaid: BigInt
  protocolFeePaid: BigInt
  type: ZeroXOrderType!
  createTimeStamp: BigInt!
  txHash: Bytes!
}
